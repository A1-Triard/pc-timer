0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ticks (0000h): dq 0
0x00, 0x00, // low_level_ticks_per_tick (0008h): dw 0
0x00, 0x00, // low_level_ticks_mod_10000h (000Ah): dw 0
0x00, 0x00, 0x00, 0x00, // bios_handler (000Ch): dd 0
0x00, // init (0010h): db 0
0x9C, //handler_entry (0011h): pushf
0x1E, // push ds
0x53, // push bx
0x50, // push ax
0x8C, 0xC8, // mov ax, cs
0x8E, 0xD8, // mov ds, ax
0xC6, 0x06, 0x10, 0x00, 0x01, // mov byte [init], 1
0xBB, 0x00, 0x00, // mov bx, ticks
0x83, 0x07, 0x01, // add word [bx], 1
0x83, 0x57, 0x02, 0x00, // adc word [bx+2], 0
0x83, 0x57, 0x04, 0x00, // adc word [bx+4], 0
0x83, 0x57, 0x06, 0x00, // adc word [bx+6], 0
0xA1, 0x08, 0x00, // mov ax, [low_level_ticks_per_tick]
0x01, 0x06, 0x0A, 0x00, // add [low_level_ticks_mod_10000h], ax
0x73, 0x08, // jnc skip_bios_handler
0x58, // pop ax
0x5B, // pop bx
0x1F, // pop ds
0x9D, // popf
0xFF, 0x2E, 0x0C, 0x00, // jmp far [bios_handler]
0xB0, 0x20, // skip_bios_handler: mov al, 0x20
0xE6, 0x20, // out 0x20, al
0x58, // pop ax
0x5B, // pop bx
0x1F, // pop ds
0x9D, // popf
0xCF, // iret
